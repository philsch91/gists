---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: 0-efs-csi-driver
  annotations:
    kubernetes.io/description: 'policy for AWS EFS CSI Driver'
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  privileged: true
  allowPrivilegeEscalation: true
  allowedCapabilities:
    - NET_BIND_SERVICE
  allowedHostPaths:
    - pathPrefix: /var/lib/kubelet
    - pathPrefix: /var/lib/kubelet/plugins_registry/
    - pathPrefix: /var/lib/kubelet/plugins/efs.csi.aws.com/
    - pathPrefix: /var/run/efs
    - pathPrefix: /var/amazon/efs
    - pathPrefix: /etc/amazon/efs
  volumes:
  - hostPath
  - configMap
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
  - emptyDir
  - awsElasticBlockStore
  hostNetwork: true
  hostPorts:
  - min: 0
    max: 65535
  hostIPC: true
  hostPID: true
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eks:podsecuritypolicy-cluster:efs-csi
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: ["policy"]
    resourceNames: ["0-efs-csi-driver"]
    resources: ["podsecuritypolicies"]
    verbs: ["use"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eks:podsecuritypolicy-cluster:efs-csi
subjects:
  - kind: ServiceAccount
    name: efs-csi-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: eks:podsecuritypolicy-cluster:efs-csi
  apiGroup: rbac.authorization.k8s.io

